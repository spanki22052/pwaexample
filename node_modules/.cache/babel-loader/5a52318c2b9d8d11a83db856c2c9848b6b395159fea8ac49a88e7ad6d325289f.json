{"ast":null,"code":"// Конфигурация для разных окружений\nconst config={development:{API_URL:\"http://localhost:3001\",WS_URL:\"ws://localhost:3000\",ENV:\"development\"},production:{API_URL:\"http://109.205.212.29\",WS_URL:\"ws://109.205.212.29\",ENV:\"production\"}};// Определяем текущее окружение\nconst getCurrentEnv=()=>{// Проверяем переменные окружения React\nif(process.env.REACT_APP_ENV){return process.env.REACT_APP_ENV;}// Проверяем NODE_ENV\nif(process.env.NODE_ENV===\"production\"){return\"production\";}// Проверяем hostname для автоматического определения\nif(typeof window!==\"undefined\"){if(window.location.hostname===\"localhost\"||window.location.hostname===\"127.0.0.1\"){return\"development\";}return\"production\";}return\"development\";};const currentEnv=getCurrentEnv();const currentConfig=config[currentEnv];export default currentConfig;export{config,getCurrentEnv};","map":{"version":3,"names":["config","development","API_URL","WS_URL","ENV","production","getCurrentEnv","process","env","REACT_APP_ENV","NODE_ENV","window","location","hostname","currentEnv","currentConfig"],"sources":["/Users/tigrotigro/Projects/Hakaton/pwaexample/src/config.js"],"sourcesContent":["// Конфигурация для разных окружений\nconst config = {\n  development: {\n    API_URL: \"http://localhost:3001\",\n    WS_URL: \"ws://localhost:3000\",\n    ENV: \"development\",\n  },\n  production: {\n    API_URL: \"http://109.205.212.29\",\n    WS_URL: \"ws://109.205.212.29\",\n    ENV: \"production\",\n  },\n};\n\n// Определяем текущее окружение\nconst getCurrentEnv = () => {\n  // Проверяем переменные окружения React\n  if (process.env.REACT_APP_ENV) {\n    return process.env.REACT_APP_ENV;\n  }\n\n  // Проверяем NODE_ENV\n  if (process.env.NODE_ENV === \"production\") {\n    return \"production\";\n  }\n\n  // Проверяем hostname для автоматического определения\n  if (typeof window !== \"undefined\") {\n    if (\n      window.location.hostname === \"localhost\" ||\n      window.location.hostname === \"127.0.0.1\"\n    ) {\n      return \"development\";\n    }\n    return \"production\";\n  }\n\n  return \"development\";\n};\n\nconst currentEnv = getCurrentEnv();\nconst currentConfig = config[currentEnv];\n\nexport default currentConfig;\nexport { config, getCurrentEnv };\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,MAAM,CAAG,CACbC,WAAW,CAAE,CACXC,OAAO,CAAE,uBAAuB,CAChCC,MAAM,CAAE,qBAAqB,CAC7BC,GAAG,CAAE,aACP,CAAC,CACDC,UAAU,CAAE,CACVH,OAAO,CAAE,uBAAuB,CAChCC,MAAM,CAAE,qBAAqB,CAC7BC,GAAG,CAAE,YACP,CACF,CAAC,CAED;AACA,KAAM,CAAAE,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACA,GAAIC,OAAO,CAACC,GAAG,CAACC,aAAa,CAAE,CAC7B,MAAO,CAAAF,OAAO,CAACC,GAAG,CAACC,aAAa,CAClC,CAEA;AACA,GAAIF,OAAO,CAACC,GAAG,CAACE,QAAQ,GAAK,YAAY,CAAE,CACzC,MAAO,YAAY,CACrB,CAEA;AACA,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,CAAE,CACjC,GACEA,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,CACxC,CACA,MAAO,aAAa,CACtB,CACA,MAAO,YAAY,CACrB,CAEA,MAAO,aAAa,CACtB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGR,aAAa,CAAC,CAAC,CAClC,KAAM,CAAAS,aAAa,CAAGf,MAAM,CAACc,UAAU,CAAC,CAExC,cAAe,CAAAC,aAAa,CAC5B,OAASf,MAAM,CAAEM,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}