{"ast":null,"code":"// Конфигурация для разных окружений\nconst config = {\n  development: {\n    API_URL: \"http://localhost:3001\",\n    WS_URL: \"ws://localhost:3000\",\n    ENV: \"development\"\n  },\n  production: {\n    API_URL: process.env.REACT_APP_API_URL || \"http://109.205.212.29:3001\",\n    WS_URL: process.env.REACT_APP_WS_URL || \"ws://109.205.212.29:3001\",\n    ENV: \"production\"\n  }\n};\n\n// Определяем текущее окружение\nconst getCurrentEnv = () => {\n  // Проверяем переменные окружения React\n  if (process.env.REACT_APP_ENV) {\n    return process.env.REACT_APP_ENV;\n  }\n\n  // Проверяем NODE_ENV\n  if (process.env.NODE_ENV === \"production\") {\n    return \"production\";\n  }\n\n  // Проверяем hostname для автоматического определения\n  if (typeof window !== \"undefined\") {\n    if (window.location.hostname === \"localhost\" || window.location.hostname === \"127.0.0.1\") {\n      return \"development\";\n    }\n    return \"production\";\n  }\n  return \"development\";\n};\nconst currentEnv = getCurrentEnv();\nconst currentConfig = config[currentEnv];\nexport default currentConfig;\nexport { config, getCurrentEnv };","map":{"version":3,"names":["config","development","API_URL","WS_URL","ENV","production","process","env","REACT_APP_API_URL","REACT_APP_WS_URL","getCurrentEnv","REACT_APP_ENV","NODE_ENV","window","location","hostname","currentEnv","currentConfig"],"sources":["/Users/tigrotigro/Projects/Hakaton/pwaexample/src/config.js"],"sourcesContent":["// Конфигурация для разных окружений\nconst config = {\n  development: {\n    API_URL: \"http://localhost:3001\",\n    WS_URL: \"ws://localhost:3000\",\n    ENV: \"development\",\n  },\n  production: {\n    API_URL: process.env.REACT_APP_API_URL || \"http://109.205.212.29:3001\",\n    WS_URL: process.env.REACT_APP_WS_URL || \"ws://109.205.212.29:3001\",\n    ENV: \"production\",\n  },\n};\n\n// Определяем текущее окружение\nconst getCurrentEnv = () => {\n  // Проверяем переменные окружения React\n  if (process.env.REACT_APP_ENV) {\n    return process.env.REACT_APP_ENV;\n  }\n\n  // Проверяем NODE_ENV\n  if (process.env.NODE_ENV === \"production\") {\n    return \"production\";\n  }\n\n  // Проверяем hostname для автоматического определения\n  if (typeof window !== \"undefined\") {\n    if (\n      window.location.hostname === \"localhost\" ||\n      window.location.hostname === \"127.0.0.1\"\n    ) {\n      return \"development\";\n    }\n    return \"production\";\n  }\n\n  return \"development\";\n};\n\nconst currentEnv = getCurrentEnv();\nconst currentConfig = config[currentEnv];\n\nexport default currentConfig;\nexport { config, getCurrentEnv };\n"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG;EACbC,WAAW,EAAE;IACXC,OAAO,EAAE,uBAAuB;IAChCC,MAAM,EAAE,qBAAqB;IAC7BC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE;IACVH,OAAO,EAAEI,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,4BAA4B;IACtEL,MAAM,EAAEG,OAAO,CAACC,GAAG,CAACE,gBAAgB,IAAI,0BAA0B;IAClEL,GAAG,EAAE;EACP;AACF,CAAC;;AAED;AACA,MAAMM,aAAa,GAAGA,CAAA,KAAM;EAC1B;EACA,IAAIJ,OAAO,CAACC,GAAG,CAACI,aAAa,EAAE;IAC7B,OAAOL,OAAO,CAACC,GAAG,CAACI,aAAa;EAClC;;EAEA;EACA,IAAIL,OAAO,CAACC,GAAG,CAACK,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAO,YAAY;EACrB;;EAEA;EACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,IACEA,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,EACxC;MACA,OAAO,aAAa;IACtB;IACA,OAAO,YAAY;EACrB;EAEA,OAAO,aAAa;AACtB,CAAC;AAED,MAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;AAClC,MAAMO,aAAa,GAAGjB,MAAM,CAACgB,UAAU,CAAC;AAExC,eAAeC,aAAa;AAC5B,SAASjB,MAAM,EAAEU,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}