{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import PhotoUploader from\"./components/PhotoUploader\";import PhotoGrid from\"./components/PhotoGrid\";import NetworkStatus from\"./components/NetworkStatus\";import{photoService}from\"./services/PhotoService\";import{checkAllPermissions,displayPermissionsInfo,isHTTPS}from\"./utils/permissions\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[photos,setPhotos]=useState([]);const[isOnline,setIsOnline]=useState(navigator.onLine);const[isLoading,setIsLoading]=useState(true);const[isSyncing,setIsSyncing]=useState(false);const[syncInfo,setSyncInfo]=useState(null);// Проверка статуса сети\nuseEffect(()=>{const handleOnline=()=>setIsOnline(true);const handleOffline=()=>setIsOnline(false);window.addEventListener(\"online\",handleOnline);window.addEventListener(\"offline\",handleOffline);return()=>{window.removeEventListener(\"online\",handleOnline);window.removeEventListener(\"offline\",handleOffline);};},[]);const loadPhotos=useCallback(async function(){let withSync=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;try{setIsLoading(true);if(withSync)setIsSyncing(true);let savedPhotos;if(withSync){// Загружаем с синхронизацией с сервером\nsavedPhotos=await photoService.getAllPhotosWithSync();console.log(\"Фотографии загружены с синхронизацией с сервером\");}else{// Обычная загрузка из локальной базы\nsavedPhotos=await photoService.getAllPhotos();}setPhotos(savedPhotos);console.log(\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043E \".concat(savedPhotos.length,\" \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439\"));}catch(error){console.error(\"Ошибка загрузки фотографий:\",error);}finally{setIsLoading(false);setIsSyncing(false);}},[]);const retryPendingUploads=useCallback(async()=>{try{// Получаем актуальные фотографии из базы данных вместо state\nconst allPhotos=await photoService.getAllPhotos();const pendingPhotos=allPhotos.filter(photo=>photo.status===\"pending\");for(const photo of pendingPhotos){await photoService.uploadPhoto(photo);}// Перезагружаем список фотографий\nawait loadPhotos();}catch(error){console.error(\"Ошибка повторной отправки:\",error);}},[loadPhotos]);// Загрузка фотографий при инициализации\nuseEffect(()=>{// При первом запуске загружаем с синхронизацией с сервером\nloadPhotos(true);// Проверяем разрешения при запуске приложения\nconst checkPermissions=async()=>{try{const permissions=await checkAllPermissions();displayPermissionsInfo(permissions);// Предупреждаем если не HTTPS (кроме localhost)\nif(!isHTTPS()&&window.location.hostname!==\"localhost\"){console.warn(\"⚠️ Приложение работает по HTTP. Для полной функциональности камеры необходим HTTPS.\");}}catch(error){console.error(\"Ошибка при проверке разрешений:\",error);}};checkPermissions();},[loadPhotos]);// Попытка отправить отложенные фотографии при восстановлении сети\nuseEffect(()=>{if(isOnline){retryPendingUploads();}},[isOnline,retryPendingUploads]);const handlePhotoUpload=async file=>{try{const photoData={id:Date.now().toString()+Math.random().toString(36).substr(2,9),// Более уникальный ID\nfile:file,name:file.name,size:file.size,status:\"pending\",createdAt:new Date().toISOString()};// Сохраняем в IndexedDB\nawait photoService.savePhoto(photoData);// Обновляем состояние\nsetPhotos(prev=>[...prev,photoData]);// Пытаемся отправить, если есть интернет\nif(isOnline){try{await photoService.uploadPhoto(photoData);await loadPhotos();// Обновляем статус\n}catch(uploadError){console.error(\"Ошибка загрузки на сервер:\",uploadError);// Не блокируем интерфейс, просто логируем ошибку\nawait loadPhotos();// Обновляем статус с ошибкой\n}}}catch(error){console.error(\"Ошибка загрузки фотографии:\",error);}};const handleRetryUpload=async photoId=>{try{const photo=photos.find(p=>p.id===photoId);if(photo){await photoService.uploadPhoto(photo);await loadPhotos();}}catch(error){console.error(\"Ошибка повторной отправки:\",error);}};const handleDeletePhoto=async photoId=>{try{await photoService.deletePhoto(photoId);// Обновляем состояние, удаляя фотографию из списка\nsetPhotos(prev=>prev.filter(photo=>photo.id!==photoId));}catch(error){console.error(\"Ошибка удаления фотографии:\",error);alert(\"Не удалось удалить фотографию. Попробуйте еще раз.\");}};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:isSyncing?\"🔄 Синхронизация с сервером...\":\"Загрузка фотографий...\"})});}const handleSyncWithServer=async()=>{try{setSyncInfo(\"Подключение к серверу...\");await loadPhotos(true);// Показываем информацию о результате синхронизации\nconst serverPhotos=photos.filter(photo=>photo.isFromServer);const localPhotos=photos.filter(photo=>!photo.isFromServer);setSyncInfo(\"\\u0421\\u0438\\u043D\\u0445\\u0440\\u043E\\u043D\\u0438\\u0437\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043E: \".concat(serverPhotos.length,\" \\u0441 \\u0441\\u0435\\u0440\\u0432\\u0435\\u0440\\u0430 + \").concat(localPhotos.length,\" \\u043B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445\"));// Скрываем информацию через 3 секунды\nsetTimeout(()=>setSyncInfo(null),3000);}catch(error){console.error(\"Ошибка синхронизации:\",error);setSyncInfo(\"Ошибка синхронизации\");setTimeout(()=>setSyncInfo(null),3000);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDCF8 Photo Upload PWA\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"10px\"},children:[/*#__PURE__*/_jsx(NetworkStatus,{isOnline:isOnline}),isOnline&&/*#__PURE__*/_jsx(\"button\",{onClick:handleSyncWithServer,disabled:isSyncing,style:{background:isSyncing?\"#6c757d\":\"#007bff\",color:\"white\",border:\"none\",padding:\"6px 12px\",borderRadius:\"4px\",fontSize:\"12px\",cursor:isSyncing?\"not-allowed\":\"pointer\"},children:isSyncing?\"🔄 Синхронизация...\":\"🔄 Синхронизировать\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"12px\",color:\"#666\",background:\"#f8f9fa\",padding:\"4px 8px\",borderRadius:\"4px\"},children:[\"\\uD83D\\uDCCA \\u0412\\u0441\\u0435\\u0433\\u043E: \",photos.length,\" | \\uD83C\\uDF10 \\u0421\\u0435\\u0440\\u0432\\u0435\\u0440:\",\" \",photos.filter(p=>p.isFromServer).length,\" | \\uD83D\\uDCF1 \\u041B\\u043E\\u043A\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435:\",\" \",photos.filter(p=>!p.isFromServer).length]})]})]}),syncInfo&&/*#__PURE__*/_jsxs(\"div\",{style:{background:\"#e3f2fd\",border:\"1px solid #2196f3\",borderRadius:\"6px\",padding:\"12px\",margin:\"10px 0\",fontSize:\"14px\",color:\"#1976d2\",textAlign:\"center\"},children:[\"\\u2139\\uFE0F \",syncInfo]}),/*#__PURE__*/_jsx(PhotoUploader,{onPhotoUpload:handlePhotoUpload}),/*#__PURE__*/_jsx(PhotoGrid,{photos:photos,onRetryUpload:handleRetryUpload,onDeletePhoto:handleDeletePhoto,isOnline:isOnline})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PhotoUploader","PhotoGrid","NetworkStatus","photoService","checkAllPermissions","displayPermissionsInfo","isHTTPS","jsx","_jsx","jsxs","_jsxs","App","photos","setPhotos","isOnline","setIsOnline","navigator","onLine","isLoading","setIsLoading","isSyncing","setIsSyncing","syncInfo","setSyncInfo","handleOnline","handleOffline","window","addEventListener","removeEventListener","loadPhotos","withSync","arguments","length","undefined","savedPhotos","getAllPhotosWithSync","console","log","getAllPhotos","concat","error","retryPendingUploads","allPhotos","pendingPhotos","filter","photo","status","uploadPhoto","checkPermissions","permissions","location","hostname","warn","handlePhotoUpload","file","photoData","id","Date","now","toString","Math","random","substr","name","size","createdAt","toISOString","savePhoto","prev","uploadError","handleRetryUpload","photoId","find","p","handleDeletePhoto","deletePhoto","alert","className","children","handleSyncWithServer","serverPhotos","isFromServer","localPhotos","setTimeout","style","display","alignItems","gap","onClick","disabled","background","color","border","padding","borderRadius","fontSize","cursor","margin","textAlign","onPhotoUpload","onRetryUpload","onDeletePhoto"],"sources":["/Users/tigrotigro/Projects/Hakaton/pwaexample/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport PhotoUploader from \"./components/PhotoUploader\";\nimport PhotoGrid from \"./components/PhotoGrid\";\nimport NetworkStatus from \"./components/NetworkStatus\";\nimport { photoService } from \"./services/PhotoService\";\nimport {\n  checkAllPermissions,\n  displayPermissionsInfo,\n  isHTTPS,\n} from \"./utils/permissions\";\n\nfunction App() {\n  const [photos, setPhotos] = useState([]);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSyncing, setIsSyncing] = useState(false);\n  const [syncInfo, setSyncInfo] = useState(null);\n\n  // Проверка статуса сети\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []);\n\n  const loadPhotos = useCallback(async (withSync = false) => {\n    try {\n      setIsLoading(true);\n      if (withSync) setIsSyncing(true);\n\n      let savedPhotos;\n\n      if (withSync) {\n        // Загружаем с синхронизацией с сервером\n        savedPhotos = await photoService.getAllPhotosWithSync();\n        console.log(\"Фотографии загружены с синхронизацией с сервером\");\n      } else {\n        // Обычная загрузка из локальной базы\n        savedPhotos = await photoService.getAllPhotos();\n      }\n\n      setPhotos(savedPhotos);\n      console.log(`Загружено ${savedPhotos.length} фотографий`);\n    } catch (error) {\n      console.error(\"Ошибка загрузки фотографий:\", error);\n    } finally {\n      setIsLoading(false);\n      setIsSyncing(false);\n    }\n  }, []);\n\n  const retryPendingUploads = useCallback(async () => {\n    try {\n      // Получаем актуальные фотографии из базы данных вместо state\n      const allPhotos = await photoService.getAllPhotos();\n      const pendingPhotos = allPhotos.filter(\n        (photo) => photo.status === \"pending\"\n      );\n\n      for (const photo of pendingPhotos) {\n        await photoService.uploadPhoto(photo);\n      }\n      // Перезагружаем список фотографий\n      await loadPhotos();\n    } catch (error) {\n      console.error(\"Ошибка повторной отправки:\", error);\n    }\n  }, [loadPhotos]);\n\n  // Загрузка фотографий при инициализации\n  useEffect(() => {\n    // При первом запуске загружаем с синхронизацией с сервером\n    loadPhotos(true);\n\n    // Проверяем разрешения при запуске приложения\n    const checkPermissions = async () => {\n      try {\n        const permissions = await checkAllPermissions();\n        displayPermissionsInfo(permissions);\n\n        // Предупреждаем если не HTTPS (кроме localhost)\n        if (!isHTTPS() && window.location.hostname !== \"localhost\") {\n          console.warn(\n            \"⚠️ Приложение работает по HTTP. Для полной функциональности камеры необходим HTTPS.\"\n          );\n        }\n      } catch (error) {\n        console.error(\"Ошибка при проверке разрешений:\", error);\n      }\n    };\n\n    checkPermissions();\n  }, [loadPhotos]);\n\n  // Попытка отправить отложенные фотографии при восстановлении сети\n  useEffect(() => {\n    if (isOnline) {\n      retryPendingUploads();\n    }\n  }, [isOnline, retryPendingUploads]);\n\n  const handlePhotoUpload = async (file) => {\n    try {\n      const photoData = {\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9), // Более уникальный ID\n        file: file,\n        name: file.name,\n        size: file.size,\n        status: \"pending\",\n        createdAt: new Date().toISOString(),\n      };\n\n      // Сохраняем в IndexedDB\n      await photoService.savePhoto(photoData);\n\n      // Обновляем состояние\n      setPhotos((prev) => [...prev, photoData]);\n\n      // Пытаемся отправить, если есть интернет\n      if (isOnline) {\n        try {\n          await photoService.uploadPhoto(photoData);\n          await loadPhotos(); // Обновляем статус\n        } catch (uploadError) {\n          console.error(\"Ошибка загрузки на сервер:\", uploadError);\n          // Не блокируем интерфейс, просто логируем ошибку\n          await loadPhotos(); // Обновляем статус с ошибкой\n        }\n      }\n    } catch (error) {\n      console.error(\"Ошибка загрузки фотографии:\", error);\n    }\n  };\n\n  const handleRetryUpload = async (photoId) => {\n    try {\n      const photo = photos.find((p) => p.id === photoId);\n      if (photo) {\n        await photoService.uploadPhoto(photo);\n        await loadPhotos();\n      }\n    } catch (error) {\n      console.error(\"Ошибка повторной отправки:\", error);\n    }\n  };\n\n  const handleDeletePhoto = async (photoId) => {\n    try {\n      await photoService.deletePhoto(photoId);\n      // Обновляем состояние, удаляя фотографию из списка\n      setPhotos((prev) => prev.filter((photo) => photo.id !== photoId));\n    } catch (error) {\n      console.error(\"Ошибка удаления фотографии:\", error);\n      alert(\"Не удалось удалить фотографию. Попробуйте еще раз.\");\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"loading\">\n          {isSyncing\n            ? \"🔄 Синхронизация с сервером...\"\n            : \"Загрузка фотографий...\"}\n        </div>\n      </div>\n    );\n  }\n\n  const handleSyncWithServer = async () => {\n    try {\n      setSyncInfo(\"Подключение к серверу...\");\n      await loadPhotos(true);\n\n      // Показываем информацию о результате синхронизации\n      const serverPhotos = photos.filter((photo) => photo.isFromServer);\n      const localPhotos = photos.filter((photo) => !photo.isFromServer);\n\n      setSyncInfo(\n        `Синхронизировано: ${serverPhotos.length} с сервера + ${localPhotos.length} локальных`\n      );\n\n      // Скрываем информацию через 3 секунды\n      setTimeout(() => setSyncInfo(null), 3000);\n    } catch (error) {\n      console.error(\"Ошибка синхронизации:\", error);\n      setSyncInfo(\"Ошибка синхронизации\");\n      setTimeout(() => setSyncInfo(null), 3000);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h1>📸 Photo Upload PWA</h1>\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\n          <NetworkStatus isOnline={isOnline} />\n          {isOnline && (\n            <button\n              onClick={handleSyncWithServer}\n              disabled={isSyncing}\n              style={{\n                background: isSyncing ? \"#6c757d\" : \"#007bff\",\n                color: \"white\",\n                border: \"none\",\n                padding: \"6px 12px\",\n                borderRadius: \"4px\",\n                fontSize: \"12px\",\n                cursor: isSyncing ? \"not-allowed\" : \"pointer\",\n              }}\n            >\n              {isSyncing ? \"🔄 Синхронизация...\" : \"🔄 Синхронизировать\"}\n            </button>\n          )}\n          <div\n            style={{\n              fontSize: \"12px\",\n              color: \"#666\",\n              background: \"#f8f9fa\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            📊 Всего: {photos.length} | 🌐 Сервер:{\" \"}\n            {photos.filter((p) => p.isFromServer).length} | 📱 Локальные:{\" \"}\n            {photos.filter((p) => !p.isFromServer).length}\n          </div>\n        </div>\n      </header>\n\n      {syncInfo && (\n        <div\n          style={{\n            background: \"#e3f2fd\",\n            border: \"1px solid #2196f3\",\n            borderRadius: \"6px\",\n            padding: \"12px\",\n            margin: \"10px 0\",\n            fontSize: \"14px\",\n            color: \"#1976d2\",\n            textAlign: \"center\",\n          }}\n        >\n          ℹ️ {syncInfo}\n        </div>\n      )}\n\n      <PhotoUploader onPhotoUpload={handlePhotoUpload} />\n\n      <PhotoGrid\n        photos={photos}\n        onRetryUpload={handleRetryUpload}\n        onDeletePhoto={handleDeletePhoto}\n        isOnline={isOnline}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}