{"ast":null,"code":"var _jsxFileName = \"/Users/tigrotigro/Projects/Hakaton/PWA example/src/components/PhotoGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoGrid = ({\n  photos,\n  onRetryUpload,\n  isOnline\n}) => {\n  _s();\n  // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –∫—ç—à–∏—Ä—É–µ–º –∏—Ö\n  const photosWithUrls = useMemo(() => {\n    const urlMap = new Map();\n    return photos.map(photo => {\n      if (photo.file && !photo.url) {\n        // –°–æ–∑–¥–∞–µ–º URL —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –∏ –µ—Å—Ç—å —Ñ–∞–π–ª\n        if (!urlMap.has(photo.id)) {\n          urlMap.set(photo.id, URL.createObjectURL(photo.file));\n        }\n        return {\n          ...photo,\n          url: urlMap.get(photo.id)\n        };\n      }\n      return photo;\n    });\n  }, [photos]);\n\n  // –û—á–∏—â–∞–µ–º URL –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞\n  useEffect(() => {\n    return () => {\n      photosWithUrls.forEach(photo => {\n        if (photo.url && photo.url.startsWith('blob:')) {\n          URL.revokeObjectURL(photo.url);\n        }\n      });\n    };\n  }, [photosWithUrls]);\n  const handleRetryUpload = useCallback(photoId => {\n    onRetryUpload(photoId);\n  }, [onRetryUpload]);\n  if (photos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '40px',\n        color: '#666'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD83D\\uDCF7 \\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0436\\u0435\\u043D\\u043D\\u044B\\u0445 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u044C\\u0442\\u0435 \\u043F\\u0435\\u0440\\u0432\\u0443\\u044E \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u044E, \\u043F\\u0435\\u0440\\u0435\\u0442\\u0430\\u0449\\u0438\\u0432 \\u0444\\u0430\\u0439\\u043B \\u0432 \\u043E\\u0431\\u043B\\u0430\\u0441\\u0442\\u044C \\u0432\\u044B\\u0448\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n  const getStatusText = status => {\n    switch (status) {\n      case 'pending':\n        return '–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏';\n      case 'uploaded':\n        return '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ';\n      case 'error':\n        return '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏';\n      default:\n        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';\n    }\n  };\n  const getStatusClass = status => {\n    switch (status) {\n      case 'pending':\n        return 'status-pending';\n      case 'uploaded':\n        return 'status-uploaded';\n      case 'error':\n        return 'status-error';\n      default:\n        return 'status-pending';\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-grid\",\n    children: photosWithUrls.map(photo => /*#__PURE__*/_jsxDEV(PhotoItem, {\n      photo: photo,\n      onRetryUpload: handleRetryUpload,\n      isOnline: isOnline,\n      getStatusText: getStatusText,\n      getStatusClass: getStatusClass,\n      formatFileSize: formatFileSize,\n      formatDate: formatDate\n    }, photo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoGrid, \"S86HF6RxvxlVOENl8+vWOkNRjlY=\");\n_c = PhotoGrid;\nexport default PhotoGrid;\nvar _c;\n$RefreshReg$(_c, \"PhotoGrid\");","map":{"version":3,"names":["React","useMemo","useCallback","useEffect","jsxDEV","_jsxDEV","PhotoGrid","photos","onRetryUpload","isOnline","_s","photosWithUrls","urlMap","Map","map","photo","file","url","has","id","set","URL","createObjectURL","get","forEach","startsWith","revokeObjectURL","handleRetryUpload","photoId","length","style","textAlign","padding","color","children","fileName","_jsxFileName","lineNumber","columnNumber","getStatusText","status","getStatusClass","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","date","Date","toLocaleString","className","PhotoItem","_c","$RefreshReg$"],"sources":["/Users/tigrotigro/Projects/Hakaton/PWA example/src/components/PhotoGrid.js"],"sourcesContent":["import React, { useMemo, useCallback, useEffect } from 'react';\n\nconst PhotoGrid = ({ photos, onRetryUpload, isOnline }) => {\n  // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏ –∫—ç—à–∏—Ä—É–µ–º –∏—Ö\n  const photosWithUrls = useMemo(() => {\n    const urlMap = new Map();\n    \n    return photos.map((photo) => {\n      if (photo.file && !photo.url) {\n        // –°–æ–∑–¥–∞–µ–º URL —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –∏ –µ—Å—Ç—å —Ñ–∞–π–ª\n        if (!urlMap.has(photo.id)) {\n          urlMap.set(photo.id, URL.createObjectURL(photo.file));\n        }\n        return {\n          ...photo,\n          url: urlMap.get(photo.id)\n        };\n      }\n      return photo;\n    });\n  }, [photos]);\n\n  // –û—á–∏—â–∞–µ–º URL –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞\n  useEffect(() => {\n    return () => {\n      photosWithUrls.forEach(photo => {\n        if (photo.url && photo.url.startsWith('blob:')) {\n          URL.revokeObjectURL(photo.url);\n        }\n      });\n    };\n  }, [photosWithUrls]);\n\n  const handleRetryUpload = useCallback((photoId) => {\n    onRetryUpload(photoId);\n  }, [onRetryUpload]);\n\n  if (photos.length === 0) {\n    return (\n      <div style={{ textAlign: 'center', padding: '40px', color: '#666' }}>\n        <p>üì∑ –ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</p>\n        <p>–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –ø–µ—Ä–µ—Ç–∞—â–∏–≤ —Ñ–∞–π–ª –≤ –æ–±–ª–∞—Å—Ç—å –≤—ã—à–µ</p>\n      </div>\n    );\n  }\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 'pending':\n        return '–û–∂–∏–¥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏';\n      case 'uploaded':\n        return '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ';\n      case 'error':\n        return '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏';\n      default:\n        return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';\n    }\n  };\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case 'pending':\n        return 'status-pending';\n      case 'uploaded':\n        return 'status-uploaded';\n      case 'error':\n        return 'status-error';\n      default:\n        return 'status-pending';\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString('ru-RU');\n  };\n\n  return (\n    <div className=\"photo-grid\">\n      {photosWithUrls.map((photo) => (\n        <PhotoItem\n          key={photo.id}\n          photo={photo}\n          onRetryUpload={handleRetryUpload}\n          isOnline={isOnline}\n          getStatusText={getStatusText}\n          getStatusClass={getStatusClass}\n          formatFileSize={formatFileSize}\n          formatDate={formatDate}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PhotoGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}