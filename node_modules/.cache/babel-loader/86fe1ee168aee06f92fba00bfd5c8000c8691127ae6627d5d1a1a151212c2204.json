{"ast":null,"code":"import { openDB } from \"idb\";\nimport config from \"../config\";\nconst DB_NAME = \"PhotoPWA\";\nconst DB_VERSION = 1;\nconst STORE_NAME = \"photos\";\nclass PhotoService {\n  constructor() {\n    this.db = null;\n    this.initDB();\n  }\n  async initDB() {\n    try {\n      this.db = await openDB(DB_NAME, DB_VERSION, {\n        upgrade(db) {\n          if (!db.objectStoreNames.contains(STORE_NAME)) {\n            db.createObjectStore(STORE_NAME, {\n              keyPath: \"id\"\n            });\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IndexedDB:\", error);\n    }\n  }\n  async savePhoto(photoData) {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º File –≤ ArrayBuffer –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è\n      const arrayBuffer = await photoData.file.arrayBuffer();\n      const photoToSave = {\n        ...photoData,\n        fileData: arrayBuffer,\n        fileType: photoData.file.type,\n        fileName: photoData.file.name\n      };\n\n      // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π File –æ–±—ä–µ–∫—Ç\n      delete photoToSave.file;\n      await this.db.put(STORE_NAME, photoToSave);\n      return photoToSave;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n      throw error;\n    }\n  }\n  async getAllPhotos() {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ IndexedDB\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–ª–∞–π–Ω)\n      let serverPhotos = [];\n      try {\n        if (navigator.onLine) {\n          serverPhotos = await this.loadPhotosFromServer();\n        }\n      } catch (error) {\n        console.warn(\"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ:\", error);\n        serverPhotos = [];\n      }\n\n      // –°–æ–∑–¥–∞–µ–º Set ID –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n      const localPhotoIds = new Set(localPhotos.map(p => p.id));\n\n      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n      const allPhotos = [...localPhotos];\n\n      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n      for (const serverPhoto of serverPhotos) {\n        if (!localPhotoIds.has(serverPhoto.id)) {\n          allPhotos.push(serverPhoto);\n        }\n      }\n\n      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º File –æ–±—ä–µ–∫—Ç—ã –∏–∑ ArrayBuffer –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL\n      return allPhotos.map(photo => {\n        // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n        if (photo.status === \"uploaded\" && photo.serverFilename) {\n          return {\n            ...photo,\n            url: `${config.API_URL}/uploads/${photo.serverFilename}`\n            // –ù–µ —Å–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ, –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω\n          };\n        }\n\n        // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n        if (photo.url && photo.url.startsWith(`${config.API_URL}/uploads/`)) {\n          return photo;\n        }\n\n        // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ —Å–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç\n        if (photo.fileData) {\n          const file = new File([photo.fileData], photo.fileName, {\n            type: photo.fileType\n          });\n          return {\n            ...photo,\n            file: file\n          };\n        }\n        return photo;\n      }).sort((a, b) => new Date(b.uploadedAt || b.createdAt) - new Date(a.uploadedAt || a.createdAt));\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:\", error);\n      return [];\n    }\n  }\n  async updatePhotoStatus(photoId, status, error = null, serverFilename = null) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n      const photo = await this.db.get(STORE_NAME, photoId);\n      if (photo) {\n        photo.status = status;\n        if (error) {\n          photo.error = error;\n        }\n        if (serverFilename) {\n          photo.serverFilename = serverFilename;\n        }\n        await this.db.put(STORE_NAME, photo);\n      }\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n    }\n  }\n  async deletePhoto(photoId) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π\n      if (photoId.startsWith(\"server-\")) {\n        // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å —Å–µ—Ä–≤–µ—Ä–∞\n        const serverFilename = photoId.replace(\"server-\", \"\");\n        try {\n          const response = await fetch(`${config.API_URL}/api/files/${serverFilename}`, {\n            method: \"DELETE\"\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          console.log(`–§–∞–π–ª ${serverFilename} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞`);\n        } catch (serverError) {\n          console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", serverError);\n          throw serverError;\n        }\n        return;\n      }\n\n      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º\n      const photo = await this.db.get(STORE_NAME, photoId);\n\n      // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω\n      if (photo && photo.serverFilename) {\n        try {\n          const response = await fetch(`${config.API_URL}/api/files/${photo.serverFilename}`, {\n            method: \"DELETE\"\n          });\n          if (!response.ok) {\n            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞: ${photo.serverFilename}`);\n          } else {\n            console.log(`–§–∞–π–ª ${photo.serverFilename} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞`);\n          }\n        } catch (serverError) {\n          console.warn(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", serverError);\n          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n        }\n      }\n\n      // –£–¥–∞–ª—è–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n      await this.db.delete(STORE_NAME, photoId);\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n      throw error;\n    }\n  }\n  async uploadPhoto(photoData) {\n    try {\n      var _result$file;\n      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ \"–∑–∞–≥—Ä—É–∑–∫–∞\"\n      await this.updatePhotoStatus(photoData.id, \"uploading\");\n\n      // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞\n      const formData = new FormData();\n      formData.append(\"photo\", photoData.file);\n      formData.append(\"id\", photoData.id);\n      formData.append(\"name\", photoData.name);\n      formData.append(\"createdAt\", photoData.createdAt);\n\n      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º httpbin.org –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\n      let apiUrl = `${config.API_URL}/api/upload`;\n\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä\n      try {\n        await fetch(`${config.API_URL}/api/files`, {\n          method: \"HEAD\"\n        });\n      } catch {\n        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º httpbin\n        apiUrl = \"https://httpbin.org/post\";\n      }\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n\n      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è\n      const serverFilename = ((_result$file = result.file) === null || _result$file === void 0 ? void 0 : _result$file.filename) || null;\n      await this.updatePhotoStatus(photoData.id, \"uploaded\", null, serverFilename);\n\n      // ‚ú® –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏\n      console.log(`üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ç–æ: ${photoData.name}`);\n      const cleanupSuccess = await this.cleanupLocalFileData(photoData.id, serverFilename);\n      if (cleanupSuccess) {\n        console.log(`‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã –¥–ª—è: ${photoData.name}`);\n      } else {\n        console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è: ${photoData.name}`);\n      }\n      return {\n        id: photoData.id,\n        url: result.url || `https://example.com/photos/${photoData.id}.jpg`,\n        uploadedAt: new Date().toISOString(),\n        serverResponse: result,\n        serverFilename: serverFilename\n      };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n\n      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—à–∏–±–∫—É\n      await this.updatePhotoStatus(photoData.id, \"error\", error.message);\n      throw error;\n    }\n  }\n\n  // –û—á–∏—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n  async cleanupLocalFileData(photoId, serverFilename) {\n    try {\n      if (!this.db) await this.initDB();\n      const photo = await this.db.get(STORE_NAME, photoId);\n      if (photo && photo.status === \"uploaded\" && serverFilename) {\n        // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\n        const originalFileData = photo.fileData;\n        delete photo.fileData;\n        delete photo.file;\n\n        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n        photo.url = `${config.API_URL}/uploads/${serverFilename}`;\n        photo.serverFilename = serverFilename;\n        photo.uploadedAt = new Date().toISOString();\n        await this.db.put(STORE_NAME, photo);\n\n        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—á–∏—Å—Ç–∫–µ\n        const fileSizeKB = originalFileData ? Math.round(originalFileData.byteLength / 1024) : 0;\n        console.log(`üßπ –û—á–∏—â–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ç–æ \"${photo.name}\" (${fileSizeKB} KB)`);\n        console.log(`üì° –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL: ${photo.url}`);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return false;\n    }\n  }\n\n  // –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞\n  async loadPhotosFromServer() {\n    try {\n      const apiUrl = `${config.API_URL}/api/files`;\n      console.log(\"–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", apiUrl);\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const serverPhotos = data.files || [];\n      console.log(`–ù–∞–π–¥–µ–Ω–æ ${serverPhotos.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`);\n\n      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n      const transformedPhotos = serverPhotos.map(serverPhoto => ({\n        id: `server_${serverPhoto.filename}`,\n        // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ\n        name: serverPhoto.filename,\n        size: serverPhoto.size,\n        status: \"uploaded\",\n        createdAt: serverPhoto.uploadedAt,\n        serverFilename: serverPhoto.filename,\n        url: `${config.API_URL}${serverPhoto.url}`,\n        isFromServer: true // –§–ª–∞–≥ —á—Ç–æ —ç—Ç–æ —Ñ–æ—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–∞\n      }));\n      return transformedPhotos;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞:\", error);\n\n      // –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö\n      if (error.message.includes(\"Failed to fetch\")) {\n        console.error(\"üö® –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\");\n        console.error(\"1. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:\", config.API_URL);\n        console.error(\"2. CORS –æ—à–∏–±–∫–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞\");\n        console.error(\"3. Content Security Policy –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å\");\n        console.error(\"4. –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\");\n      }\n      return [];\n    }\n  }\n\n  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏\n  async syncWithServer(forceReload = false) {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞\n      const serverPhotos = await this.loadPhotosFromServer();\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –°–æ–∑–¥–∞–µ–º Set –∏–∑ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞\n      const serverFilenames = new Set(serverPhotos.map(photo => photo.serverFilename));\n\n      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n      const photosToCleanup = [];\n      for (const localPhoto of localPhotos) {\n        if (localPhoto.serverFilename && serverFilenames.has(localPhoto.serverFilename)) {\n          // –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n          if (localPhoto.status !== \"uploaded\") {\n            localPhoto.status = \"uploaded\";\n            await this.db.put(STORE_NAME, localPhoto);\n          }\n\n          // –ü–æ–º–µ—á–∞–µ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (File –æ–±—ä–µ–∫—Ç –∏ fileData)\n          if (localPhoto.fileData || localPhoto.file) {\n            photosToCleanup.push(localPhoto.id);\n            console.log(`üßπ –ü–æ–º–µ—á–∞–µ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${localPhoto.name}`);\n          }\n        }\n      }\n\n      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n      for (const photoId of photosToCleanup) {\n        const photo = await this.db.get(STORE_NAME, photoId);\n        if (photo) {\n          const originalFileData = photo.fileData;\n          const fileSizeKB = originalFileData ? Math.round(originalFileData.byteLength / 1024) : 0;\n\n          // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\n          delete photo.fileData;\n          delete photo.file;\n\n          // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n          if (photo.serverFilename && !photo.url) {\n            photo.url = `${config.API_URL}/uploads/${photo.serverFilename}`;\n          }\n\n          // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏\n          photo.uploadedAt = new Date().toISOString();\n          await this.db.put(STORE_NAME, photo);\n          console.log(`‚úÖ –û—á–∏—â–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è: ${photo.name} (${fileSizeKB} KB)`);\n        }\n      }\n\n      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n      const localServerFilenames = new Set(localPhotos.filter(photo => photo.serverFilename).map(photo => photo.serverFilename));\n      for (const serverPhoto of serverPhotos) {\n        if (!localServerFilenames.has(serverPhoto.serverFilename) || forceReload) {\n          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É\n          // –ü—Ä–∏ forceReload –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ\n          await this.db.put(STORE_NAME, serverPhoto);\n          if (forceReload) {\n            console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ: ${serverPhoto.name}`);\n          }\n        }\n      }\n      console.log(\"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞\");\n      return true;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:\", error);\n      return false;\n    }\n  }\n\n  // –£–¥–∞–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n  async cleanupDuplicatePhotos() {\n    try {\n      if (!this.db) await this.initDB();\n      console.log(\"üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...\");\n\n      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ\n      const serverPhotos = await this.loadPhotosFromServer();\n      const serverFilenames = new Set(serverPhotos.map(photo => photo.serverFilename));\n      let cleanedCount = 0;\n      const photosToRemove = [];\n      for (const localPhoto of localPhotos) {\n        // –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n        if (localPhoto.serverFilename && serverFilenames.has(localPhoto.serverFilename) && localPhoto.status === \"uploaded\" && !localPhoto.isFromServer // –ù–µ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ\n        ) {\n          photosToRemove.push(localPhoto.id);\n          console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –¥—É–±–ª–∏–∫–∞—Ç: ${localPhoto.name}`);\n        }\n      }\n\n      // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã\n      for (const photoId of photosToRemove) {\n        await this.db.delete(STORE_NAME, photoId);\n        cleanedCount++;\n      }\n      console.log(`‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${cleanedCount}`);\n      return cleanedCount;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:\", error);\n      return 0;\n    }\n  }\n\n  // –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —É—á–µ—Ç–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n  async getAllPhotosWithSync() {\n    try {\n      console.log(\"üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–æ–º...\");\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\n      const localPhotosBeforeSync = await this.getAllPhotos();\n      console.log(`üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${localPhotosBeforeSync.length}`);\n\n      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n      await this.syncWithServer();\n\n      // –û—á–∏—â–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å)\n      const cleanedCount = await this.cleanupDuplicatePhotos();\n      if (cleanedCount > 0) {\n        console.log(`üßπ –£–¥–∞–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${cleanedCount}`);\n      }\n\n      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –æ—á–∏—Å—Ç–∫–∏\n      const allPhotosAfterSync = await this.getAllPhotos();\n      console.log(`üìä –í—Å–µ–≥–æ —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${allPhotosAfterSync.length}`);\n      const serverPhotos = allPhotosAfterSync.filter(photo => photo.isFromServer);\n      const localPhotos = allPhotosAfterSync.filter(photo => !photo.isFromServer);\n      console.log(`üåê –°–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ: ${serverPhotos.length}`);\n      console.log(`üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ: ${localPhotos.length}`);\n      console.log(\"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\");\n      return allPhotosAfterSync;\n    } catch (error) {\n      console.error(\"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π:\", error);\n      // –ï—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n      const localPhotos = await this.getAllPhotos();\n      console.log(`üì± –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ: ${localPhotos.length}`);\n      return localPhotos;\n    }\n  }\n\n  // –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ä–∞–∑–º–µ—Ä)\n  async getLocalDataStats() {\n    try {\n      if (!this.db) await this.initDB();\n      const allPhotos = await this.db.getAll(STORE_NAME);\n      const photosWithLocalData = allPhotos.filter(photo => photo.fileData || photo.file);\n      let totalSizeKB = 0;\n      for (const photo of photosWithLocalData) {\n        if (photo.fileData) {\n          totalSizeKB += Math.round(photo.fileData.byteLength / 1024);\n        }\n      }\n      return {\n        count: photosWithLocalData.length,\n        sizeKB: totalSizeKB\n      };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return {\n        count: 0,\n        sizeKB: 0\n      };\n    }\n  }\n\n  // –û—á–∏—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n  async cleanupAllUploadedLocalData() {\n    try {\n      if (!this.db) await this.initDB();\n      console.log(\"üßπ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤—É—é –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ...\");\n      const allPhotos = await this.db.getAll(STORE_NAME);\n      const uploadedPhotos = allPhotos.filter(photo => photo.status === \"uploaded\" && photo.serverFilename && (photo.fileData || photo.file));\n      let cleanedCount = 0;\n      let totalSizeKB = 0;\n      for (const photo of uploadedPhotos) {\n        const fileSizeKB = photo.fileData ? Math.round(photo.fileData.byteLength / 1024) : 0;\n        const success = await this.cleanupLocalFileData(photo.id, photo.serverFilename);\n        if (success) {\n          cleanedCount++;\n          totalSizeKB += fileSizeKB;\n        }\n      }\n      console.log(`‚úÖ –û—á–∏—â–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${cleanedCount} —Ñ–æ—Ç–æ (${totalSizeKB} KB)`);\n      return {\n        cleanedCount,\n        totalSizeKB\n      };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return {\n        cleanedCount: 0,\n        totalSizeKB: 0\n      };\n    }\n  }\n\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\n  async cleanupOldPhotos(daysOld = 30) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - daysOld);\n      const photos = await this.db.getAll(STORE_NAME);\n      const photosToDelete = photos.filter(photo => {\n        const photoDate = new Date(photo.createdAt);\n        return photoDate < cutoffDate && photo.status === \"uploaded\";\n      });\n      for (const photo of photosToDelete) {\n        await this.db.delete(STORE_NAME, photo.id);\n      }\n      return photosToDelete.length;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:\", error);\n      return 0;\n    }\n  }\n}\nexport const photoService = new PhotoService();\nexport { PhotoService };","map":{"version":3,"names":["openDB","config","DB_NAME","DB_VERSION","STORE_NAME","PhotoService","constructor","db","initDB","upgrade","objectStoreNames","contains","createObjectStore","keyPath","error","console","savePhoto","photoData","arrayBuffer","file","photoToSave","fileData","fileType","type","fileName","name","put","getAllPhotos","localPhotos","getAll","serverPhotos","navigator","onLine","loadPhotosFromServer","warn","localPhotoIds","Set","map","p","id","allPhotos","serverPhoto","has","push","photo","status","serverFilename","url","API_URL","startsWith","File","sort","a","b","Date","uploadedAt","createdAt","updatePhotoStatus","photoId","get","deletePhoto","replace","response","fetch","method","ok","Error","log","serverError","delete","uploadPhoto","_result$file","formData","FormData","append","apiUrl","body","result","json","filename","cleanupSuccess","cleanupLocalFileData","toISOString","serverResponse","message","originalFileData","fileSizeKB","Math","round","byteLength","headers","data","files","length","transformedPhotos","size","isFromServer","includes","syncWithServer","forceReload","serverFilenames","photosToCleanup","localPhoto","localServerFilenames","filter","cleanupDuplicatePhotos","cleanedCount","photosToRemove","getAllPhotosWithSync","localPhotosBeforeSync","allPhotosAfterSync","getLocalDataStats","photosWithLocalData","totalSizeKB","count","sizeKB","cleanupAllUploadedLocalData","uploadedPhotos","success","cleanupOldPhotos","daysOld","cutoffDate","setDate","getDate","photos","photosToDelete","photoDate","photoService"],"sources":["/Users/tigrotigro/Projects/Hakaton/pwaexample/src/services/PhotoService.js"],"sourcesContent":["import { openDB } from \"idb\";\nimport config from \"../config\";\n\nconst DB_NAME = \"PhotoPWA\";\nconst DB_VERSION = 1;\nconst STORE_NAME = \"photos\";\n\nclass PhotoService {\n  constructor() {\n    this.db = null;\n    this.initDB();\n  }\n\n  async initDB() {\n    try {\n      this.db = await openDB(DB_NAME, DB_VERSION, {\n        upgrade(db) {\n          if (!db.objectStoreNames.contains(STORE_NAME)) {\n            db.createObjectStore(STORE_NAME, { keyPath: \"id\" });\n          }\n        },\n      });\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ IndexedDB:\", error);\n    }\n  }\n\n  async savePhoto(photoData) {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º File –≤ ArrayBuffer –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è\n      const arrayBuffer = await photoData.file.arrayBuffer();\n      const photoToSave = {\n        ...photoData,\n        fileData: arrayBuffer,\n        fileType: photoData.file.type,\n        fileName: photoData.file.name,\n      };\n\n      // –£–¥–∞–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π File –æ–±—ä–µ–∫—Ç\n      delete photoToSave.file;\n\n      await this.db.put(STORE_NAME, photoToSave);\n      return photoToSave;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n      throw error;\n    }\n  }\n\n  async getAllPhotos() {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ IndexedDB\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–ª–∞–π–Ω)\n      let serverPhotos = [];\n      try {\n        if (navigator.onLine) {\n          serverPhotos = await this.loadPhotosFromServer();\n        }\n      } catch (error) {\n        console.warn(\"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ:\", error);\n        serverPhotos = [];\n      }\n\n      // –°–æ–∑–¥–∞–µ–º Set ID –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏\n      const localPhotoIds = new Set(localPhotos.map((p) => p.id));\n\n      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n      const allPhotos = [...localPhotos];\n\n      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n      for (const serverPhoto of serverPhotos) {\n        if (!localPhotoIds.has(serverPhoto.id)) {\n          allPhotos.push(serverPhoto);\n        }\n      }\n\n      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º File –æ–±—ä–µ–∫—Ç—ã –∏–∑ ArrayBuffer –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL\n      return allPhotos\n        .map((photo) => {\n          // –ï—Å–ª–∏ —Ñ–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n          if (photo.status === \"uploaded\" && photo.serverFilename) {\n            return {\n              ...photo,\n              url: `${config.API_URL}/uploads/${photo.serverFilename}`,\n              // –ù–µ —Å–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ, –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω\n            };\n          }\n\n          // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n          if (photo.url && photo.url.startsWith(`${config.API_URL}/uploads/`)) {\n            return photo;\n          }\n\n          // –î–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ —Å–æ–∑–¥–∞–µ–º File –æ–±—ä–µ–∫—Ç\n          if (photo.fileData) {\n            const file = new File([photo.fileData], photo.fileName, {\n              type: photo.fileType,\n            });\n            return {\n              ...photo,\n              file: file,\n            };\n          }\n\n          return photo;\n        })\n        .sort(\n          (a, b) =>\n            new Date(b.uploadedAt || b.createdAt) -\n            new Date(a.uploadedAt || a.createdAt)\n        );\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:\", error);\n      return [];\n    }\n  }\n\n  async updatePhotoStatus(\n    photoId,\n    status,\n    error = null,\n    serverFilename = null\n  ) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n\n      const photo = await this.db.get(STORE_NAME, photoId);\n      if (photo) {\n        photo.status = status;\n        if (error) {\n          photo.error = error;\n        }\n        if (serverFilename) {\n          photo.serverFilename = serverFilename;\n        }\n        await this.db.put(STORE_NAME, photo);\n      }\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n    }\n  }\n\n  async deletePhoto(photoId) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π\n      if (photoId.startsWith(\"server-\")) {\n        // –î–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å —Å–µ—Ä–≤–µ—Ä–∞\n        const serverFilename = photoId.replace(\"server-\", \"\");\n        try {\n          const response = await fetch(\n            `${config.API_URL}/api/files/${serverFilename}`,\n            {\n              method: \"DELETE\",\n            }\n          );\n\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n\n          console.log(`–§–∞–π–ª ${serverFilename} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞`);\n        } catch (serverError) {\n          console.error(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", serverError);\n          throw serverError;\n        }\n        return;\n      }\n\n      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º\n      const photo = await this.db.get(STORE_NAME, photoId);\n\n      // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω\n      if (photo && photo.serverFilename) {\n        try {\n          const response = await fetch(\n            `${config.API_URL}/api/files/${photo.serverFilename}`,\n            {\n              method: \"DELETE\",\n            }\n          );\n\n          if (!response.ok) {\n            console.warn(\n              `–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞: ${photo.serverFilename}`\n            );\n          } else {\n            console.log(\n              `–§–∞–π–ª ${photo.serverFilename} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω —Å —Å–µ—Ä–≤–µ—Ä–∞`\n            );\n          }\n        } catch (serverError) {\n          console.warn(\"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", serverError);\n          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ë–î –¥–∞–∂–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n        }\n      }\n\n      // –£–¥–∞–ª—è–µ–º –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\n      await this.db.delete(STORE_NAME, photoId);\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n      throw error;\n    }\n  }\n\n  async uploadPhoto(photoData) {\n    try {\n      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ \"–∑–∞–≥—Ä—É–∑–∫–∞\"\n      await this.updatePhotoStatus(photoData.id, \"uploading\");\n\n      // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞\n      const formData = new FormData();\n      formData.append(\"photo\", photoData.file);\n      formData.append(\"id\", photoData.id);\n      formData.append(\"name\", photoData.name);\n      formData.append(\"createdAt\", photoData.createdAt);\n\n      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n      // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º httpbin.org –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\n      let apiUrl = `${config.API_URL}/api/upload`;\n\n      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ —Å–µ—Ä–≤–µ—Ä\n      try {\n        await fetch(`${config.API_URL}/api/files`, { method: \"HEAD\" });\n      } catch {\n        // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º httpbin\n        apiUrl = \"https://httpbin.org/post\";\n      }\n\n      const response = await fetch(apiUrl, {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è\n      const serverFilename = result.file?.filename || null;\n      await this.updatePhotoStatus(\n        photoData.id,\n        \"uploaded\",\n        null,\n        serverFilename\n      );\n\n      // ‚ú® –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏\n      console.log(\n        `üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ñ–æ—Ç–æ: ${photoData.name}`\n      );\n      const cleanupSuccess = await this.cleanupLocalFileData(\n        photoData.id,\n        serverFilename\n      );\n      if (cleanupSuccess) {\n        console.log(\n          `‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã –¥–ª—è: ${photoData.name}`\n        );\n      } else {\n        console.log(\n          `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è: ${photoData.name}`\n        );\n      }\n\n      return {\n        id: photoData.id,\n        url: result.url || `https://example.com/photos/${photoData.id}.jpg`,\n        uploadedAt: new Date().toISOString(),\n        serverResponse: result,\n        serverFilename: serverFilename,\n      };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:\", error);\n\n      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ –æ—à–∏–±–∫—É\n      await this.updatePhotoStatus(photoData.id, \"error\", error.message);\n\n      throw error;\n    }\n  }\n\n  // –û—á–∏—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n  async cleanupLocalFileData(photoId, serverFilename) {\n    try {\n      if (!this.db) await this.initDB();\n\n      const photo = await this.db.get(STORE_NAME, photoId);\n      if (photo && photo.status === \"uploaded\" && serverFilename) {\n        // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ\n        const originalFileData = photo.fileData;\n\n        delete photo.fileData;\n        delete photo.file;\n\n        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n        photo.url = `${config.API_URL}/uploads/${serverFilename}`;\n        photo.serverFilename = serverFilename;\n        photo.uploadedAt = new Date().toISOString();\n\n        await this.db.put(STORE_NAME, photo);\n\n        // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—á–∏—Å—Ç–∫–µ\n        const fileSizeKB = originalFileData\n          ? Math.round(originalFileData.byteLength / 1024)\n          : 0;\n        console.log(\n          `üßπ –û—á–∏—â–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–æ—Ç–æ \"${photo.name}\" (${fileSizeKB} KB)`\n        );\n        console.log(`üì° –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL: ${photo.url}`);\n\n        return true;\n      }\n\n      return false;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return false;\n    }\n  }\n\n  // –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞\n  async loadPhotosFromServer() {\n    try {\n      const apiUrl = `${config.API_URL}/api/files`;\n      console.log(\"–ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:\", apiUrl);\n\n      const response = await fetch(apiUrl, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const serverPhotos = data.files || [];\n\n      console.log(`–ù–∞–π–¥–µ–Ω–æ ${serverPhotos.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ`);\n\n      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n      const transformedPhotos = serverPhotos.map((serverPhoto) => ({\n        id: `server_${serverPhoto.filename}`, // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ\n        name: serverPhoto.filename,\n        size: serverPhoto.size,\n        status: \"uploaded\",\n        createdAt: serverPhoto.uploadedAt,\n        serverFilename: serverPhoto.filename,\n        url: `${config.API_URL}${serverPhoto.url}`,\n        isFromServer: true, // –§–ª–∞–≥ —á—Ç–æ —ç—Ç–æ —Ñ–æ—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–∞\n      }));\n\n      return transformedPhotos;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞:\", error);\n\n      // –ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö\n      if (error.message.includes(\"Failed to fetch\")) {\n        console.error(\"üö® –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\");\n        console.error(\"1. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:\", config.API_URL);\n        console.error(\"2. CORS –æ—à–∏–±–∫–∞ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞\");\n        console.error(\"3. Content Security Policy –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å\");\n        console.error(\"4. –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\");\n      }\n\n      return [];\n    }\n  }\n\n  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ —Å —Å–µ—Ä–≤–µ—Ä–Ω—ã–º–∏\n  async syncWithServer(forceReload = false) {\n    try {\n      if (!this.db) await this.initDB();\n\n      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞\n      const serverPhotos = await this.loadPhotosFromServer();\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –°–æ–∑–¥–∞–µ–º Set –∏–∑ –∏–º–µ–Ω —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞\n      const serverFilenames = new Set(\n        serverPhotos.map((photo) => photo.serverFilename)\n      );\n\n      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n      const photosToCleanup = [];\n      for (const localPhoto of localPhotos) {\n        if (\n          localPhoto.serverFilename &&\n          serverFilenames.has(localPhoto.serverFilename)\n        ) {\n          // –ï—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n          if (localPhoto.status !== \"uploaded\") {\n            localPhoto.status = \"uploaded\";\n            await this.db.put(STORE_NAME, localPhoto);\n          }\n\n          // –ü–æ–º–µ—á–∞–µ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (File –æ–±—ä–µ–∫—Ç –∏ fileData)\n          if (localPhoto.fileData || localPhoto.file) {\n            photosToCleanup.push(localPhoto.id);\n            console.log(\n              `üßπ –ü–æ–º–µ—á–∞–µ–º –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${localPhoto.name}`\n            );\n          }\n        }\n      }\n\n      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n      for (const photoId of photosToCleanup) {\n        const photo = await this.db.get(STORE_NAME, photoId);\n        if (photo) {\n          const originalFileData = photo.fileData;\n          const fileSizeKB = originalFileData\n            ? Math.round(originalFileData.byteLength / 1024)\n            : 0;\n\n          // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ\n          delete photo.fileData;\n          delete photo.file;\n\n          // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –µ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–Ω—ã–π URL\n          if (photo.serverFilename && !photo.url) {\n            photo.url = `${config.API_URL}/uploads/${photo.serverFilename}`;\n          }\n\n          // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏\n          photo.uploadedAt = new Date().toISOString();\n\n          await this.db.put(STORE_NAME, photo);\n          console.log(\n            `‚úÖ –û—á–∏—â–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è: ${photo.name} (${fileSizeKB} KB)`\n          );\n        }\n      }\n\n      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑–µ\n      const localServerFilenames = new Set(\n        localPhotos\n          .filter((photo) => photo.serverFilename)\n          .map((photo) => photo.serverFilename)\n      );\n\n      for (const serverPhoto of serverPhotos) {\n        if (\n          !localServerFilenames.has(serverPhoto.serverFilename) ||\n          forceReload\n        ) {\n          // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É\n          // –ü—Ä–∏ forceReload –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ\n          await this.db.put(STORE_NAME, serverPhoto);\n          if (forceReload) {\n            console.log(`üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ: ${serverPhoto.name}`);\n          }\n        }\n      }\n\n      console.log(\"–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞\");\n      return true;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º:\", error);\n      return false;\n    }\n  }\n\n  // –£–¥–∞–ª—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –µ—Å—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n  async cleanupDuplicatePhotos() {\n    try {\n      if (!this.db) await this.initDB();\n\n      console.log(\"üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...\");\n\n      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n      const localPhotos = await this.db.getAll(STORE_NAME);\n\n      // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—ã–µ —Ñ–æ—Ç–æ\n      const serverPhotos = await this.loadPhotosFromServer();\n      const serverFilenames = new Set(\n        serverPhotos.map((photo) => photo.serverFilename)\n      );\n\n      let cleanedCount = 0;\n      const photosToRemove = [];\n\n      for (const localPhoto of localPhotos) {\n        // –ï—Å–ª–∏ —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä\n        if (\n          localPhoto.serverFilename &&\n          serverFilenames.has(localPhoto.serverFilename) &&\n          localPhoto.status === \"uploaded\" &&\n          !localPhoto.isFromServer // –ù–µ —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ\n        ) {\n          photosToRemove.push(localPhoto.id);\n          console.log(`üóëÔ∏è –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –¥—É–±–ª–∏–∫–∞—Ç: ${localPhoto.name}`);\n        }\n      }\n\n      // –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã\n      for (const photoId of photosToRemove) {\n        await this.db.delete(STORE_NAME, photoId);\n        cleanedCount++;\n      }\n\n      console.log(`‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${cleanedCount}`);\n      return cleanedCount;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤:\", error);\n      return 0;\n    }\n  }\n\n  // –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å —É—á–µ—Ç–æ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n  async getAllPhotosWithSync() {\n    try {\n      console.log(\"üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–æ–º...\");\n\n      // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏\n      const localPhotosBeforeSync = await this.getAllPhotos();\n      console.log(\n        `üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${localPhotosBeforeSync.length}`\n      );\n\n      // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º\n      await this.syncWithServer();\n\n      // –û—á–∏—â–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å)\n      const cleanedCount = await this.cleanupDuplicatePhotos();\n      if (cleanedCount > 0) {\n        console.log(`üßπ –£–¥–∞–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${cleanedCount}`);\n      }\n\n      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –æ—á–∏—Å—Ç–∫–∏\n      const allPhotosAfterSync = await this.getAllPhotos();\n      console.log(\n        `üìä –í—Å–µ–≥–æ —Ñ–æ—Ç–æ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${allPhotosAfterSync.length}`\n      );\n\n      const serverPhotos = allPhotosAfterSync.filter(\n        (photo) => photo.isFromServer\n      );\n      const localPhotos = allPhotosAfterSync.filter(\n        (photo) => !photo.isFromServer\n      );\n\n      console.log(`üåê –°–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ: ${serverPhotos.length}`);\n      console.log(`üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ñ–æ—Ç–æ: ${localPhotos.length}`);\n      console.log(\"‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\");\n\n      return allPhotosAfterSync;\n    } catch (error) {\n      console.error(\"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π:\", error);\n      // –ï—Å–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ\n      const localPhotos = await this.getAllPhotos();\n      console.log(`üì± –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ: ${localPhotos.length}`);\n      return localPhotos;\n    }\n  }\n\n  // –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ —Ä–∞–∑–º–µ—Ä)\n  async getLocalDataStats() {\n    try {\n      if (!this.db) await this.initDB();\n\n      const allPhotos = await this.db.getAll(STORE_NAME);\n      const photosWithLocalData = allPhotos.filter(\n        (photo) => photo.fileData || photo.file\n      );\n\n      let totalSizeKB = 0;\n      for (const photo of photosWithLocalData) {\n        if (photo.fileData) {\n          totalSizeKB += Math.round(photo.fileData.byteLength / 1024);\n        }\n      }\n\n      return {\n        count: photosWithLocalData.length,\n        sizeKB: totalSizeKB,\n      };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return { count: 0, sizeKB: 0 };\n    }\n  }\n\n  // –û—á–∏—â–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n  async cleanupAllUploadedLocalData() {\n    try {\n      if (!this.db) await this.initDB();\n\n      console.log(\n        \"üßπ –ù–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤—É—é –æ—á–∏—Å—Ç–∫—É –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ...\"\n      );\n\n      const allPhotos = await this.db.getAll(STORE_NAME);\n      const uploadedPhotos = allPhotos.filter(\n        (photo) =>\n          photo.status === \"uploaded\" &&\n          photo.serverFilename &&\n          (photo.fileData || photo.file)\n      );\n\n      let cleanedCount = 0;\n      let totalSizeKB = 0;\n\n      for (const photo of uploadedPhotos) {\n        const fileSizeKB = photo.fileData\n          ? Math.round(photo.fileData.byteLength / 1024)\n          : 0;\n\n        const success = await this.cleanupLocalFileData(\n          photo.id,\n          photo.serverFilename\n        );\n        if (success) {\n          cleanedCount++;\n          totalSizeKB += fileSizeKB;\n        }\n      }\n\n      console.log(\n        `‚úÖ –û—á–∏—â–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${cleanedCount} —Ñ–æ—Ç–æ (${totalSizeKB} KB)`\n      );\n      return { cleanedCount, totalSizeKB };\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π –æ—á–∏—Å—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:\", error);\n      return { cleanedCount: 0, totalSizeKB: 0 };\n    }\n  }\n\n  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)\n  async cleanupOldPhotos(daysOld = 30) {\n    try {\n      if (!this.db) {\n        await this.initDB();\n      }\n\n      const cutoffDate = new Date();\n      cutoffDate.setDate(cutoffDate.getDate() - daysOld);\n\n      const photos = await this.db.getAll(STORE_NAME);\n      const photosToDelete = photos.filter((photo) => {\n        const photoDate = new Date(photo.createdAt);\n        return photoDate < cutoffDate && photo.status === \"uploaded\";\n      });\n\n      for (const photo of photosToDelete) {\n        await this.db.delete(STORE_NAME, photo.id);\n      }\n\n      return photosToDelete.length;\n    } catch (error) {\n      console.error(\"–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:\", error);\n      return 0;\n    }\n  }\n}\n\nexport const photoService = new PhotoService();\nexport { PhotoService };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,KAAK;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAE9B,MAAMC,OAAO,GAAG,UAAU;AAC1B,MAAMC,UAAU,GAAG,CAAC;AACpB,MAAMC,UAAU,GAAG,QAAQ;AAE3B,MAAMC,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,EAAE,GAAG,IAAI;IACd,IAAI,CAACC,MAAM,CAAC,CAAC;EACf;EAEA,MAAMA,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,IAAI,CAACD,EAAE,GAAG,MAAMP,MAAM,CAACE,OAAO,EAAEC,UAAU,EAAE;QAC1CM,OAAOA,CAACF,EAAE,EAAE;UACV,IAAI,CAACA,EAAE,CAACG,gBAAgB,CAACC,QAAQ,CAACP,UAAU,CAAC,EAAE;YAC7CG,EAAE,CAACK,iBAAiB,CAACR,UAAU,EAAE;cAAES,OAAO,EAAE;YAAK,CAAC,CAAC;UACrD;QACF;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF;EAEA,MAAME,SAASA,CAACC,SAAS,EAAE;IACzB,IAAI;MACF,IAAI,CAAC,IAAI,CAACV,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;;MAEjC;MACA,MAAMU,WAAW,GAAG,MAAMD,SAAS,CAACE,IAAI,CAACD,WAAW,CAAC,CAAC;MACtD,MAAME,WAAW,GAAG;QAClB,GAAGH,SAAS;QACZI,QAAQ,EAAEH,WAAW;QACrBI,QAAQ,EAAEL,SAAS,CAACE,IAAI,CAACI,IAAI;QAC7BC,QAAQ,EAAEP,SAAS,CAACE,IAAI,CAACM;MAC3B,CAAC;;MAED;MACA,OAAOL,WAAW,CAACD,IAAI;MAEvB,MAAM,IAAI,CAACZ,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEgB,WAAW,CAAC;MAC1C,OAAOA,WAAW;IACpB,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF;EAEA,MAAMa,YAAYA,CAAA,EAAG;IACnB,IAAI;MACF,IAAI,CAAC,IAAI,CAACpB,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;;MAEjC;MACA,MAAMoB,WAAW,GAAG,MAAM,IAAI,CAACrB,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;;MAEpD;MACA,IAAI0B,YAAY,GAAG,EAAE;MACrB,IAAI;QACF,IAAIC,SAAS,CAACC,MAAM,EAAE;UACpBF,YAAY,GAAG,MAAM,IAAI,CAACG,oBAAoB,CAAC,CAAC;QAClD;MACF,CAAC,CAAC,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACmB,IAAI,CAAC,sCAAsC,EAAEpB,KAAK,CAAC;QAC3DgB,YAAY,GAAG,EAAE;MACnB;;MAEA;MACA,MAAMK,aAAa,GAAG,IAAIC,GAAG,CAACR,WAAW,CAACS,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAAC,CAAC;;MAE3D;MACA,MAAMC,SAAS,GAAG,CAAC,GAAGZ,WAAW,CAAC;;MAElC;MACA,KAAK,MAAMa,WAAW,IAAIX,YAAY,EAAE;QACtC,IAAI,CAACK,aAAa,CAACO,GAAG,CAACD,WAAW,CAACF,EAAE,CAAC,EAAE;UACtCC,SAAS,CAACG,IAAI,CAACF,WAAW,CAAC;QAC7B;MACF;;MAEA;MACA,OAAOD,SAAS,CACbH,GAAG,CAAEO,KAAK,IAAK;QACd;QACA,IAAIA,KAAK,CAACC,MAAM,KAAK,UAAU,IAAID,KAAK,CAACE,cAAc,EAAE;UACvD,OAAO;YACL,GAAGF,KAAK;YACRG,GAAG,EAAE,GAAG9C,MAAM,CAAC+C,OAAO,YAAYJ,KAAK,CAACE,cAAc;YACtD;UACF,CAAC;QACH;;QAEA;QACA,IAAIF,KAAK,CAACG,GAAG,IAAIH,KAAK,CAACG,GAAG,CAACE,UAAU,CAAC,GAAGhD,MAAM,CAAC+C,OAAO,WAAW,CAAC,EAAE;UACnE,OAAOJ,KAAK;QACd;;QAEA;QACA,IAAIA,KAAK,CAACvB,QAAQ,EAAE;UAClB,MAAMF,IAAI,GAAG,IAAI+B,IAAI,CAAC,CAACN,KAAK,CAACvB,QAAQ,CAAC,EAAEuB,KAAK,CAACpB,QAAQ,EAAE;YACtDD,IAAI,EAAEqB,KAAK,CAACtB;UACd,CAAC,CAAC;UACF,OAAO;YACL,GAAGsB,KAAK;YACRzB,IAAI,EAAEA;UACR,CAAC;QACH;QAEA,OAAOyB,KAAK;MACd,CAAC,CAAC,CACDO,IAAI,CACH,CAACC,CAAC,EAAEC,CAAC,KACH,IAAIC,IAAI,CAACD,CAAC,CAACE,UAAU,IAAIF,CAAC,CAACG,SAAS,CAAC,GACrC,IAAIF,IAAI,CAACF,CAAC,CAACG,UAAU,IAAIH,CAAC,CAACI,SAAS,CACxC,CAAC;IACL,CAAC,CAAC,OAAO1C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,OAAO,EAAE;IACX;EACF;EAEA,MAAM2C,iBAAiBA,CACrBC,OAAO,EACPb,MAAM,EACN/B,KAAK,GAAG,IAAI,EACZgC,cAAc,GAAG,IAAI,EACrB;IACA,IAAI;MACF,IAAI,CAAC,IAAI,CAACvC,EAAE,EAAE;QACZ,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MACrB;MAEA,MAAMoC,KAAK,GAAG,MAAM,IAAI,CAACrC,EAAE,CAACoD,GAAG,CAACvD,UAAU,EAAEsD,OAAO,CAAC;MACpD,IAAId,KAAK,EAAE;QACTA,KAAK,CAACC,MAAM,GAAGA,MAAM;QACrB,IAAI/B,KAAK,EAAE;UACT8B,KAAK,CAAC9B,KAAK,GAAGA,KAAK;QACrB;QACA,IAAIgC,cAAc,EAAE;UAClBF,KAAK,CAACE,cAAc,GAAGA,cAAc;QACvC;QACA,MAAM,IAAI,CAACvC,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEwC,KAAK,CAAC;MACtC;IACF,CAAC,CAAC,OAAO9B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC/D;EACF;EAEA,MAAM8C,WAAWA,CAACF,OAAO,EAAE;IACzB,IAAI;MACF,IAAI,CAAC,IAAI,CAACnD,EAAE,EAAE;QACZ,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MACrB;;MAEA;MACA,IAAIkD,OAAO,CAACT,UAAU,CAAC,SAAS,CAAC,EAAE;QACjC;QACA,MAAMH,cAAc,GAAGY,OAAO,CAACG,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;QACrD,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9D,MAAM,CAAC+C,OAAO,cAAcF,cAAc,EAAE,EAC/C;YACEkB,MAAM,EAAE;UACV,CACF,CAAC;UAED,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACjB,MAAM,EAAE,CAAC;UAC3D;UAEA9B,OAAO,CAACoD,GAAG,CAAC,QAAQrB,cAAc,2BAA2B,CAAC;QAChE,CAAC,CAAC,OAAOsB,WAAW,EAAE;UACpBrD,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEsD,WAAW,CAAC;UAClE,MAAMA,WAAW;QACnB;QACA;MACF;;MAEA;MACA,MAAMxB,KAAK,GAAG,MAAM,IAAI,CAACrC,EAAE,CAACoD,GAAG,CAACvD,UAAU,EAAEsD,OAAO,CAAC;;MAEpD;MACA,IAAId,KAAK,IAAIA,KAAK,CAACE,cAAc,EAAE;QACjC,IAAI;UACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAG9D,MAAM,CAAC+C,OAAO,cAAcJ,KAAK,CAACE,cAAc,EAAE,EACrD;YACEkB,MAAM,EAAE;UACV,CACF,CAAC;UAED,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;YAChBlD,OAAO,CAACmB,IAAI,CACV,sCAAsCU,KAAK,CAACE,cAAc,EAC5D,CAAC;UACH,CAAC,MAAM;YACL/B,OAAO,CAACoD,GAAG,CACT,QAAQvB,KAAK,CAACE,cAAc,2BAC9B,CAAC;UACH;QACF,CAAC,CAAC,OAAOsB,WAAW,EAAE;UACpBrD,OAAO,CAACmB,IAAI,CAAC,sCAAsC,EAAEkC,WAAW,CAAC;UACjE;QACF;MACF;;MAEA;MACA,MAAM,IAAI,CAAC7D,EAAE,CAAC8D,MAAM,CAACjE,UAAU,EAAEsD,OAAO,CAAC;IAC3C,CAAC,CAAC,OAAO5C,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF;EAEA,MAAMwD,WAAWA,CAACrD,SAAS,EAAE;IAC3B,IAAI;MAAA,IAAAsD,YAAA;MACF;MACA,MAAM,IAAI,CAACd,iBAAiB,CAACxC,SAAS,CAACsB,EAAE,EAAE,WAAW,CAAC;;MAEvD;MACA,MAAMiC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEzD,SAAS,CAACE,IAAI,CAAC;MACxCqD,QAAQ,CAACE,MAAM,CAAC,IAAI,EAAEzD,SAAS,CAACsB,EAAE,CAAC;MACnCiC,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEzD,SAAS,CAACQ,IAAI,CAAC;MACvC+C,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEzD,SAAS,CAACuC,SAAS,CAAC;;MAEjD;MACA;MACA,IAAImB,MAAM,GAAG,GAAG1E,MAAM,CAAC+C,OAAO,aAAa;;MAE3C;MACA,IAAI;QACF,MAAMe,KAAK,CAAC,GAAG9D,MAAM,CAAC+C,OAAO,YAAY,EAAE;UAAEgB,MAAM,EAAE;QAAO,CAAC,CAAC;MAChE,CAAC,CAAC,MAAM;QACN;QACAW,MAAM,GAAG,0BAA0B;MACrC;MAEA,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACY,MAAM,EAAE;QACnCX,MAAM,EAAE,MAAM;QACdY,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACjB,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMgC,MAAM,GAAG,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC;;MAEpC;MACA,MAAMhC,cAAc,GAAG,EAAAyB,YAAA,GAAAM,MAAM,CAAC1D,IAAI,cAAAoD,YAAA,uBAAXA,YAAA,CAAaQ,QAAQ,KAAI,IAAI;MACpD,MAAM,IAAI,CAACtB,iBAAiB,CAC1BxC,SAAS,CAACsB,EAAE,EACZ,UAAU,EACV,IAAI,EACJO,cACF,CAAC;;MAED;MACA/B,OAAO,CAACoD,GAAG,CACT,kDAAkDlD,SAAS,CAACQ,IAAI,EAClE,CAAC;MACD,MAAMuD,cAAc,GAAG,MAAM,IAAI,CAACC,oBAAoB,CACpDhE,SAAS,CAACsB,EAAE,EACZO,cACF,CAAC;MACD,IAAIkC,cAAc,EAAE;QAClBjE,OAAO,CAACoD,GAAG,CACT,2CAA2ClD,SAAS,CAACQ,IAAI,EAC3D,CAAC;MACH,CAAC,MAAM;QACLV,OAAO,CAACoD,GAAG,CACT,gDAAgDlD,SAAS,CAACQ,IAAI,EAChE,CAAC;MACH;MAEA,OAAO;QACLc,EAAE,EAAEtB,SAAS,CAACsB,EAAE;QAChBQ,GAAG,EAAE8B,MAAM,CAAC9B,GAAG,IAAI,8BAA8B9B,SAAS,CAACsB,EAAE,MAAM;QACnEgB,UAAU,EAAE,IAAID,IAAI,CAAC,CAAC,CAAC4B,WAAW,CAAC,CAAC;QACpCC,cAAc,EAAEN,MAAM;QACtB/B,cAAc,EAAEA;MAClB,CAAC;IACH,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;;MAEnD;MACA,MAAM,IAAI,CAAC2C,iBAAiB,CAACxC,SAAS,CAACsB,EAAE,EAAE,OAAO,EAAEzB,KAAK,CAACsE,OAAO,CAAC;MAElE,MAAMtE,KAAK;IACb;EACF;;EAEA;EACA,MAAMmE,oBAAoBA,CAACvB,OAAO,EAAEZ,cAAc,EAAE;IAClD,IAAI;MACF,IAAI,CAAC,IAAI,CAACvC,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MAEjC,MAAMoC,KAAK,GAAG,MAAM,IAAI,CAACrC,EAAE,CAACoD,GAAG,CAACvD,UAAU,EAAEsD,OAAO,CAAC;MACpD,IAAId,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAK,UAAU,IAAIC,cAAc,EAAE;QAC1D;QACA,MAAMuC,gBAAgB,GAAGzC,KAAK,CAACvB,QAAQ;QAEvC,OAAOuB,KAAK,CAACvB,QAAQ;QACrB,OAAOuB,KAAK,CAACzB,IAAI;;QAEjB;QACAyB,KAAK,CAACG,GAAG,GAAG,GAAG9C,MAAM,CAAC+C,OAAO,YAAYF,cAAc,EAAE;QACzDF,KAAK,CAACE,cAAc,GAAGA,cAAc;QACrCF,KAAK,CAACW,UAAU,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC4B,WAAW,CAAC,CAAC;QAE3C,MAAM,IAAI,CAAC3E,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEwC,KAAK,CAAC;;QAEpC;QACA,MAAM0C,UAAU,GAAGD,gBAAgB,GAC/BE,IAAI,CAACC,KAAK,CAACH,gBAAgB,CAACI,UAAU,GAAG,IAAI,CAAC,GAC9C,CAAC;QACL1E,OAAO,CAACoD,GAAG,CACT,yCAAyCvB,KAAK,CAACnB,IAAI,MAAM6D,UAAU,MACrE,CAAC;QACDvE,OAAO,CAACoD,GAAG,CAAC,yCAAyCvB,KAAK,CAACG,GAAG,EAAE,CAAC;QAEjE,OAAO,IAAI;MACb;MAEA,OAAO,KAAK;IACd,CAAC,CAAC,OAAOjC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,OAAO,KAAK;IACd;EACF;;EAEA;EACA,MAAMmB,oBAAoBA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAM0C,MAAM,GAAG,GAAG1E,MAAM,CAAC+C,OAAO,YAAY;MAC5CjC,OAAO,CAACoD,GAAG,CAAC,iCAAiC,EAAEQ,MAAM,CAAC;MAEtD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACY,MAAM,EAAE;QACnCX,MAAM,EAAE,KAAK;QACb0B,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAAC5B,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBJ,QAAQ,CAACjB,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAM8C,IAAI,GAAG,MAAM7B,QAAQ,CAACgB,IAAI,CAAC,CAAC;MAClC,MAAMhD,YAAY,GAAG6D,IAAI,CAACC,KAAK,IAAI,EAAE;MAErC7E,OAAO,CAACoD,GAAG,CAAC,WAAWrC,YAAY,CAAC+D,MAAM,wBAAwB,CAAC;;MAEnE;MACA,MAAMC,iBAAiB,GAAGhE,YAAY,CAACO,GAAG,CAAEI,WAAW,KAAM;QAC3DF,EAAE,EAAE,UAAUE,WAAW,CAACsC,QAAQ,EAAE;QAAE;QACtCtD,IAAI,EAAEgB,WAAW,CAACsC,QAAQ;QAC1BgB,IAAI,EAAEtD,WAAW,CAACsD,IAAI;QACtBlD,MAAM,EAAE,UAAU;QAClBW,SAAS,EAAEf,WAAW,CAACc,UAAU;QACjCT,cAAc,EAAEL,WAAW,CAACsC,QAAQ;QACpChC,GAAG,EAAE,GAAG9C,MAAM,CAAC+C,OAAO,GAAGP,WAAW,CAACM,GAAG,EAAE;QAC1CiD,YAAY,EAAE,IAAI,CAAE;MACtB,CAAC,CAAC,CAAC;MAEH,OAAOF,iBAAiB;IAC1B,CAAC,CAAC,OAAOhF,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;;MAE7D;MACA,IAAIA,KAAK,CAACsE,OAAO,CAACa,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAC7ClF,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAC;QACtCC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEb,MAAM,CAAC+C,OAAO,CAAC;QAChEjC,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAC;QAC7DC,OAAO,CAACD,KAAK,CAAC,6CAA6C,CAAC;QAC5DC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC7C;MAEA,OAAO,EAAE;IACX;EACF;;EAEA;EACA,MAAMoF,cAAcA,CAACC,WAAW,GAAG,KAAK,EAAE;IACxC,IAAI;MACF,IAAI,CAAC,IAAI,CAAC5F,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;;MAEjC;MACA,MAAMsB,YAAY,GAAG,MAAM,IAAI,CAACG,oBAAoB,CAAC,CAAC;;MAEtD;MACA,MAAML,WAAW,GAAG,MAAM,IAAI,CAACrB,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;;MAEpD;MACA,MAAMgG,eAAe,GAAG,IAAIhE,GAAG,CAC7BN,YAAY,CAACO,GAAG,CAAEO,KAAK,IAAKA,KAAK,CAACE,cAAc,CAClD,CAAC;;MAED;MACA,MAAMuD,eAAe,GAAG,EAAE;MAC1B,KAAK,MAAMC,UAAU,IAAI1E,WAAW,EAAE;QACpC,IACE0E,UAAU,CAACxD,cAAc,IACzBsD,eAAe,CAAC1D,GAAG,CAAC4D,UAAU,CAACxD,cAAc,CAAC,EAC9C;UACA;UACA,IAAIwD,UAAU,CAACzD,MAAM,KAAK,UAAU,EAAE;YACpCyD,UAAU,CAACzD,MAAM,GAAG,UAAU;YAC9B,MAAM,IAAI,CAACtC,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEkG,UAAU,CAAC;UAC3C;;UAEA;UACA,IAAIA,UAAU,CAACjF,QAAQ,IAAIiF,UAAU,CAACnF,IAAI,EAAE;YAC1CkF,eAAe,CAAC1D,IAAI,CAAC2D,UAAU,CAAC/D,EAAE,CAAC;YACnCxB,OAAO,CAACoD,GAAG,CACT,6CAA6CmC,UAAU,CAAC7E,IAAI,EAC9D,CAAC;UACH;QACF;MACF;;MAEA;MACA,KAAK,MAAMiC,OAAO,IAAI2C,eAAe,EAAE;QACrC,MAAMzD,KAAK,GAAG,MAAM,IAAI,CAACrC,EAAE,CAACoD,GAAG,CAACvD,UAAU,EAAEsD,OAAO,CAAC;QACpD,IAAId,KAAK,EAAE;UACT,MAAMyC,gBAAgB,GAAGzC,KAAK,CAACvB,QAAQ;UACvC,MAAMiE,UAAU,GAAGD,gBAAgB,GAC/BE,IAAI,CAACC,KAAK,CAACH,gBAAgB,CAACI,UAAU,GAAG,IAAI,CAAC,GAC9C,CAAC;;UAEL;UACA,OAAO7C,KAAK,CAACvB,QAAQ;UACrB,OAAOuB,KAAK,CAACzB,IAAI;;UAEjB;UACA,IAAIyB,KAAK,CAACE,cAAc,IAAI,CAACF,KAAK,CAACG,GAAG,EAAE;YACtCH,KAAK,CAACG,GAAG,GAAG,GAAG9C,MAAM,CAAC+C,OAAO,YAAYJ,KAAK,CAACE,cAAc,EAAE;UACjE;;UAEA;UACAF,KAAK,CAACW,UAAU,GAAG,IAAID,IAAI,CAAC,CAAC,CAAC4B,WAAW,CAAC,CAAC;UAE3C,MAAM,IAAI,CAAC3E,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEwC,KAAK,CAAC;UACpC7B,OAAO,CAACoD,GAAG,CACT,mCAAmCvB,KAAK,CAACnB,IAAI,KAAK6D,UAAU,MAC9D,CAAC;QACH;MACF;;MAEA;MACA,MAAMiB,oBAAoB,GAAG,IAAInE,GAAG,CAClCR,WAAW,CACR4E,MAAM,CAAE5D,KAAK,IAAKA,KAAK,CAACE,cAAc,CAAC,CACvCT,GAAG,CAAEO,KAAK,IAAKA,KAAK,CAACE,cAAc,CACxC,CAAC;MAED,KAAK,MAAML,WAAW,IAAIX,YAAY,EAAE;QACtC,IACE,CAACyE,oBAAoB,CAAC7D,GAAG,CAACD,WAAW,CAACK,cAAc,CAAC,IACrDqD,WAAW,EACX;UACA;UACA;UACA,MAAM,IAAI,CAAC5F,EAAE,CAACmB,GAAG,CAACtB,UAAU,EAAEqC,WAAW,CAAC;UAC1C,IAAI0D,WAAW,EAAE;YACfpF,OAAO,CAACoD,GAAG,CAAC,gCAAgC1B,WAAW,CAAChB,IAAI,EAAE,CAAC;UACjE;QACF;MACF;MAEAV,OAAO,CAACoD,GAAG,CAAC,oCAAoC,CAAC;MACjD,OAAO,IAAI;IACb,CAAC,CAAC,OAAOrD,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,OAAO,KAAK;IACd;EACF;;EAEA;EACA,MAAM2F,sBAAsBA,CAAA,EAAG;IAC7B,IAAI;MACF,IAAI,CAAC,IAAI,CAAClG,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MAEjCO,OAAO,CAACoD,GAAG,CAAC,mCAAmC,CAAC;;MAEhD;MACA,MAAMvC,WAAW,GAAG,MAAM,IAAI,CAACrB,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;;MAEpD;MACA,MAAM0B,YAAY,GAAG,MAAM,IAAI,CAACG,oBAAoB,CAAC,CAAC;MACtD,MAAMmE,eAAe,GAAG,IAAIhE,GAAG,CAC7BN,YAAY,CAACO,GAAG,CAAEO,KAAK,IAAKA,KAAK,CAACE,cAAc,CAClD,CAAC;MAED,IAAI4D,YAAY,GAAG,CAAC;MACpB,MAAMC,cAAc,GAAG,EAAE;MAEzB,KAAK,MAAML,UAAU,IAAI1E,WAAW,EAAE;QACpC;QACA,IACE0E,UAAU,CAACxD,cAAc,IACzBsD,eAAe,CAAC1D,GAAG,CAAC4D,UAAU,CAACxD,cAAc,CAAC,IAC9CwD,UAAU,CAACzD,MAAM,KAAK,UAAU,IAChC,CAACyD,UAAU,CAACN,YAAY,CAAC;QAAA,EACzB;UACAW,cAAc,CAAChE,IAAI,CAAC2D,UAAU,CAAC/D,EAAE,CAAC;UAClCxB,OAAO,CAACoD,GAAG,CAAC,mCAAmCmC,UAAU,CAAC7E,IAAI,EAAE,CAAC;QACnE;MACF;;MAEA;MACA,KAAK,MAAMiC,OAAO,IAAIiD,cAAc,EAAE;QACpC,MAAM,IAAI,CAACpG,EAAE,CAAC8D,MAAM,CAACjE,UAAU,EAAEsD,OAAO,CAAC;QACzCgD,YAAY,EAAE;MAChB;MAEA3F,OAAO,CAACoD,GAAG,CAAC,4CAA4CuC,YAAY,EAAE,CAAC;MACvE,OAAOA,YAAY;IACrB,CAAC,CAAC,OAAO5F,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,CAAC;IACV;EACF;;EAEA;EACA,MAAM8F,oBAAoBA,CAAA,EAAG;IAC3B,IAAI;MACF7F,OAAO,CAACoD,GAAG,CAAC,yCAAyC,CAAC;;MAEtD;MACA,MAAM0C,qBAAqB,GAAG,MAAM,IAAI,CAAClF,YAAY,CAAC,CAAC;MACvDZ,OAAO,CAACoD,GAAG,CACT,uCAAuC0C,qBAAqB,CAAChB,MAAM,EACrE,CAAC;;MAED;MACA,MAAM,IAAI,CAACK,cAAc,CAAC,CAAC;;MAE3B;MACA,MAAMQ,YAAY,GAAG,MAAM,IAAI,CAACD,sBAAsB,CAAC,CAAC;MACxD,IAAIC,YAAY,GAAG,CAAC,EAAE;QACpB3F,OAAO,CAACoD,GAAG,CAAC,oCAAoCuC,YAAY,EAAE,CAAC;MACjE;;MAEA;MACA,MAAMI,kBAAkB,GAAG,MAAM,IAAI,CAACnF,YAAY,CAAC,CAAC;MACpDZ,OAAO,CAACoD,GAAG,CACT,sCAAsC2C,kBAAkB,CAACjB,MAAM,EACjE,CAAC;MAED,MAAM/D,YAAY,GAAGgF,kBAAkB,CAACN,MAAM,CAC3C5D,KAAK,IAAKA,KAAK,CAACoD,YACnB,CAAC;MACD,MAAMpE,WAAW,GAAGkF,kBAAkB,CAACN,MAAM,CAC1C5D,KAAK,IAAK,CAACA,KAAK,CAACoD,YACpB,CAAC;MAEDjF,OAAO,CAACoD,GAAG,CAAC,sBAAsBrC,YAAY,CAAC+D,MAAM,EAAE,CAAC;MACxD9E,OAAO,CAACoD,GAAG,CAAC,sBAAsBvC,WAAW,CAACiE,MAAM,EAAE,CAAC;MACvD9E,OAAO,CAACoD,GAAG,CAAC,oCAAoC,CAAC;MAEjD,OAAO2C,kBAAkB;IAC3B,CAAC,CAAC,OAAOhG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvE;MACA,MAAMc,WAAW,GAAG,MAAM,IAAI,CAACD,YAAY,CAAC,CAAC;MAC7CZ,OAAO,CAACoD,GAAG,CAAC,wCAAwCvC,WAAW,CAACiE,MAAM,EAAE,CAAC;MACzE,OAAOjE,WAAW;IACpB;EACF;;EAEA;EACA,MAAMmF,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,IAAI,CAAC,IAAI,CAACxG,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MAEjC,MAAMgC,SAAS,GAAG,MAAM,IAAI,CAACjC,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;MAClD,MAAM4G,mBAAmB,GAAGxE,SAAS,CAACgE,MAAM,CACzC5D,KAAK,IAAKA,KAAK,CAACvB,QAAQ,IAAIuB,KAAK,CAACzB,IACrC,CAAC;MAED,IAAI8F,WAAW,GAAG,CAAC;MACnB,KAAK,MAAMrE,KAAK,IAAIoE,mBAAmB,EAAE;QACvC,IAAIpE,KAAK,CAACvB,QAAQ,EAAE;UAClB4F,WAAW,IAAI1B,IAAI,CAACC,KAAK,CAAC5C,KAAK,CAACvB,QAAQ,CAACoE,UAAU,GAAG,IAAI,CAAC;QAC7D;MACF;MAEA,OAAO;QACLyB,KAAK,EAAEF,mBAAmB,CAACnB,MAAM;QACjCsB,MAAM,EAAEF;MACV,CAAC;IACH,CAAC,CAAC,OAAOnG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrE,OAAO;QAAEoG,KAAK,EAAE,CAAC;QAAEC,MAAM,EAAE;MAAE,CAAC;IAChC;EACF;;EAEA;EACA,MAAMC,2BAA2BA,CAAA,EAAG;IAClC,IAAI;MACF,IAAI,CAAC,IAAI,CAAC7G,EAAE,EAAE,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MAEjCO,OAAO,CAACoD,GAAG,CACT,uEACF,CAAC;MAED,MAAM3B,SAAS,GAAG,MAAM,IAAI,CAACjC,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;MAClD,MAAMiH,cAAc,GAAG7E,SAAS,CAACgE,MAAM,CACpC5D,KAAK,IACJA,KAAK,CAACC,MAAM,KAAK,UAAU,IAC3BD,KAAK,CAACE,cAAc,KACnBF,KAAK,CAACvB,QAAQ,IAAIuB,KAAK,CAACzB,IAAI,CACjC,CAAC;MAED,IAAIuF,YAAY,GAAG,CAAC;MACpB,IAAIO,WAAW,GAAG,CAAC;MAEnB,KAAK,MAAMrE,KAAK,IAAIyE,cAAc,EAAE;QAClC,MAAM/B,UAAU,GAAG1C,KAAK,CAACvB,QAAQ,GAC7BkE,IAAI,CAACC,KAAK,CAAC5C,KAAK,CAACvB,QAAQ,CAACoE,UAAU,GAAG,IAAI,CAAC,GAC5C,CAAC;QAEL,MAAM6B,OAAO,GAAG,MAAM,IAAI,CAACrC,oBAAoB,CAC7CrC,KAAK,CAACL,EAAE,EACRK,KAAK,CAACE,cACR,CAAC;QACD,IAAIwE,OAAO,EAAE;UACXZ,YAAY,EAAE;UACdO,WAAW,IAAI3B,UAAU;QAC3B;MACF;MAEAvE,OAAO,CAACoD,GAAG,CACT,+BAA+BuC,YAAY,UAAUO,WAAW,MAClE,CAAC;MACD,OAAO;QAAEP,YAAY;QAAEO;MAAY,CAAC;IACtC,CAAC,CAAC,OAAOnG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;MACjE,OAAO;QAAE4F,YAAY,EAAE,CAAC;QAAEO,WAAW,EAAE;MAAE,CAAC;IAC5C;EACF;;EAEA;EACA,MAAMM,gBAAgBA,CAACC,OAAO,GAAG,EAAE,EAAE;IACnC,IAAI;MACF,IAAI,CAAC,IAAI,CAACjH,EAAE,EAAE;QACZ,MAAM,IAAI,CAACC,MAAM,CAAC,CAAC;MACrB;MAEA,MAAMiH,UAAU,GAAG,IAAInE,IAAI,CAAC,CAAC;MAC7BmE,UAAU,CAACC,OAAO,CAACD,UAAU,CAACE,OAAO,CAAC,CAAC,GAAGH,OAAO,CAAC;MAElD,MAAMI,MAAM,GAAG,MAAM,IAAI,CAACrH,EAAE,CAACsB,MAAM,CAACzB,UAAU,CAAC;MAC/C,MAAMyH,cAAc,GAAGD,MAAM,CAACpB,MAAM,CAAE5D,KAAK,IAAK;QAC9C,MAAMkF,SAAS,GAAG,IAAIxE,IAAI,CAACV,KAAK,CAACY,SAAS,CAAC;QAC3C,OAAOsE,SAAS,GAAGL,UAAU,IAAI7E,KAAK,CAACC,MAAM,KAAK,UAAU;MAC9D,CAAC,CAAC;MAEF,KAAK,MAAMD,KAAK,IAAIiF,cAAc,EAAE;QAClC,MAAM,IAAI,CAACtH,EAAE,CAAC8D,MAAM,CAACjE,UAAU,EAAEwC,KAAK,CAACL,EAAE,CAAC;MAC5C;MAEA,OAAOsF,cAAc,CAAChC,MAAM;IAC9B,CAAC,CAAC,OAAO/E,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,OAAO,CAAC;IACV;EACF;AACF;AAEA,OAAO,MAAMiH,YAAY,GAAG,IAAI1H,YAAY,CAAC,CAAC;AAC9C,SAASA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}